{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Mid Api Test\\\\nonseam_pay\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const navigate = useNavigate();\n  const merchantData = JSON.parse(localStorage.getItem('merchantData'));\n  const [amount, setAmount] = useState('');\n  const [qrValue, setQrValue] = useState('');\n  const [showQr, setShowQr] = useState(false);\n  const [status, setStatus] = useState(''); // pending, success, failed\n\n  if (!merchantData) {\n    alert('Please sign up first!');\n    navigate('/');\n    return null;\n  }\n  const handleGenerateQR = () => {\n    const finalAmount = amount || merchantData.txn_Amount;\n\n    // ðŸ”— Generate a payment link (this could be UPI link or hosted page)\n    const upiLink = `upi://pay?pa=virtualid@upi&pn=Merchant&tn=Payment&am=${finalAmount}&cu=INR`;\n\n    // Or use a hosted payment page URL with params\n    // const hostedUrl = `https://cashier.minipay.work/pay?ref=${merchantData.CustRefNum}&amt=${finalAmount}`;\n\n    setQrValue(upiLink); // You can change this to hosted URL\n    setShowQr(true);\n    setStatus('pending');\n\n    // Start polling for status (simulate or use real API)\n    startPolling(finalAmount);\n  };\n  const startPolling = amt => {\n    // Simulate status check (in real app, poll backend API)\n    const interval = setInterval(() => {\n      // Simulate success after 8 seconds\n      setStatus('success');\n      clearInterval(interval);\n    }, 8000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Amount to Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      placeholder: \"Enter amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      style: {\n        padding: '10px',\n        fontSize: '16px',\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateQR,\n      style: {\n        marginLeft: '10px',\n        padding: '10px 20px',\n        backgroundColor: '#28a745',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showQr && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Scan QR to Pay \\u20B9\", amount || merchantData.txn_Amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrValue,\n        size: 256\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        color: '#ff9800'\n      },\n      children: \"\\uD83D\\uDD52 Waiting for payment confirmation...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        color: '#4caf50',\n        fontWeight: 'bold'\n      },\n      children: \"\\u2705 Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"ex2QtUl+cEWLKnLgc2RYP+0FIpg=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useNavigate","QRCode","jsxDEV","_jsxDEV","Main","_s","navigate","merchantData","JSON","parse","localStorage","getItem","amount","setAmount","qrValue","setQrValue","showQr","setShowQr","status","setStatus","alert","handleGenerateQR","finalAmount","txn_Amount","upiLink","startPolling","amt","interval","setInterval","clearInterval","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","step","placeholder","value","onChange","e","target","fontSize","width","onClick","marginLeft","backgroundColor","color","border","cursor","marginTop","size","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Mid Api Test/nonseam_pay/src/pages/Main.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QRCode from 'qrcode.react';\r\n\r\nconst Main = () => {\r\n  const navigate = useNavigate();\r\n  const merchantData = JSON.parse(localStorage.getItem('merchantData'));\r\n\r\n  const [amount, setAmount] = useState('');\r\n  const [qrValue, setQrValue] = useState('');\r\n  const [showQr, setShowQr] = useState(false);\r\n  const [status, setStatus] = useState(''); // pending, success, failed\r\n\r\n  if (!merchantData) {\r\n    alert('Please sign up first!');\r\n    navigate('/');\r\n    return null;\r\n  }\r\n\r\n  const handleGenerateQR = () => {\r\n    const finalAmount = amount || merchantData.txn_Amount;\r\n\r\n    // ðŸ”— Generate a payment link (this could be UPI link or hosted page)\r\n    const upiLink = `upi://pay?pa=virtualid@upi&pn=Merchant&tn=Payment&am=${finalAmount}&cu=INR`;\r\n\r\n    // Or use a hosted payment page URL with params\r\n    // const hostedUrl = `https://cashier.minipay.work/pay?ref=${merchantData.CustRefNum}&amt=${finalAmount}`;\r\n\r\n    setQrValue(upiLink); // You can change this to hosted URL\r\n    setShowQr(true);\r\n    setStatus('pending');\r\n\r\n    // Start polling for status (simulate or use real API)\r\n    startPolling(finalAmount);\r\n  };\r\n\r\n  const startPolling = (amt) => {\r\n    // Simulate status check (in real app, poll backend API)\r\n    const interval = setInterval(() => {\r\n      // Simulate success after 8 seconds\r\n      setStatus('success');\r\n      clearInterval(interval);\r\n    }, 8000);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h2>Enter Amount to Pay</h2>\r\n      <input\r\n        type=\"number\"\r\n        step=\"0.01\"\r\n        placeholder=\"Enter amount\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n        style={{ padding: '10px', fontSize: '16px', width: '200px' }}\r\n      />\r\n      <button\r\n        onClick={handleGenerateQR}\r\n        style={{\r\n          marginLeft: '10px',\r\n          padding: '10px 20px',\r\n          backgroundColor: '#28a745',\r\n          color: 'white',\r\n          border: 'none',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        Pay\r\n      </button>\r\n\r\n      {showQr && (\r\n        <div style={{ marginTop: '30px' }}>\r\n          <h3>Scan QR to Pay â‚¹{amount || merchantData.txn_Amount}</h3>\r\n          <QRCode value={qrValue} size={256} />\r\n        </div>\r\n      )}\r\n\r\n      {status === 'pending' && (\r\n        <div style={{ marginTop: '20px', color: '#ff9800' }}>\r\n          ðŸ•’ Waiting for payment confirmation...\r\n        </div>\r\n      )}\r\n\r\n      {status === 'success' && (\r\n        <div style={{ marginTop: '20px', color: '#4caf50', fontWeight: 'bold' }}>\r\n          âœ… Payment Successful!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}